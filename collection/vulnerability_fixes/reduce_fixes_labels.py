import sys
import pandas as pd

sys.path.append('..')
from finder import *  # noqa: E402

if __name__ == '__main__':
    fixes_labels = pd.read_csv(PATH_VULNERABILITY_FIXES['fixes_labels'], index_col=False)
    fixes_labels['number'] = pd.to_numeric(fixes_labels['number'], downcast='integer')
    fixes_labels_reduced = fixes_labels.copy().drop(columns=['case', 'number', 'labels', 'comments']).drop_duplicates()
    # fixes_labels_reduced.to_csv(PATH_VULNERABILITY_FIXES['fixes_labels_round_2'], index=False)
    security_updates = pd.read_csv(PATH_REPOSITORIES_DATA['security_updates_commits'], index_col=False)
    # human_fixes = fixes_
    repositories = list(set(fixes_labels['repository'].to_list()))  # ["wfp/ui"]
    superseded = dict()
    for repository in repositories:
        superseded[repository] = []
        repo_security_updates = security_updates[security_updates['repository'] == repository]
        for index, row in repo_security_updates.iterrows():
            if row['closed_case'] == 4:
                if len(superseded[repository]) > 0:
                    relatives_encountered = False
                    for superseded_collection_index, superseded_collection in enumerate(superseded[repository]):
                        if row['number'] in superseded_collection:
                            superseded[repository][superseded_collection_index].append(int(row['superseded_by']))
                            relatives_encountered = True
                            break
                    if not relatives_encountered:
                        superseded[repository].append([row['number'], int(row['superseded_by'])])
                else:
                    superseded[repository].append([row['number'], int(row['superseded_by'])])
    # print(json.dumps(superseded, indent=4, sort_keys=True))
    col_repository = list()
    col_number = list()
    col_package = list()
    col_ghsa = list()
    col_fixed = list()
    col_commit_fix = list()
    col_commit_dev = list()
    col_commit_def = list()
    col_by = list()
    col_labels = list()
    col_comments = list()
    col_associated_prs = list()
    for index, row in fixes_labels_reduced.iterrows():
        repository = row['repository']
        package = row['package']
        ghsa = row['ghsa']
        fixed = row['fixed']
        commit_fix = row['commit_fix']
        commit_dev = row['commit_dev']
        commit_def = row['commit_def']
        by = row['by']
        mask_repository = fixes_labels['repository'] == repository
        mask_package = fixes_labels['package'] == package
        mask_ghsa = fixes_labels['ghsa'] == ghsa
        mask_fixed = fixes_labels['fixed'] == fixed
        mask_commit_fix = fixes_labels['commit_fix'] == commit_fix
        mask_commit_dev = fixes_labels['commit_dev'] == commit_dev
        mask_commit_def = fixes_labels['commit_def'] == commit_def
        mask_by = fixes_labels['by'] == row['by']
        if not fixed:
            mask = (mask_repository &
                    mask_package &
                    mask_ghsa)
        else:
            mask = mask_commit_fix
            if not pd.isna(commit_dev):
                mask = mask & mask_commit_dev
            if not pd.isna(commit_def):
                mask = mask & mask_commit_def
        pr_numbers = fixes_labels[mask]['number'].to_list()
        pr_groups = dict()
        pr_groups_reversed = dict()
        pr_groups['None'] = []
        for pr_number in pr_numbers:
            relatives_encountered = False
            for superseded_collection_index, superseded_collection in enumerate(superseded[repository]):
                if pr_number in superseded_collection:
                    relatives_encountered = True
                    if str(superseded_collection) in pr_groups:
                        pr_groups[str(superseded_collection)].append(pr_number)
                        pr_groups_reversed[pr_number] = superseded_collection
                    else:
                        pr_groups[str(superseded_collection)] = [pr_number]
                        pr_groups_reversed[pr_number] = superseded_collection
                    break
            if not relatives_encountered:
                pr_groups['None'].append(pr_number)
                pr_groups_reversed[pr_number] = []
        selected_prs = []
        for key in pr_groups:
            if key != 'None':
                selected_prs.append(min(pr_groups[key]))
            else:
                selected_prs.extend(pr_groups[key])
        selected_rows = fixes_labels[mask].number.apply(lambda a: a in selected_prs)
        for index_, row_ in fixes_labels[mask][selected_rows].iterrows():
            col_repository.append(row_['repository'])
            col_number.append(row_['number'])
            col_associated_prs.append(pr_groups_reversed[row_['number']])
            col_package.append(row_['package'])
            col_ghsa.append(row_['ghsa'])
            col_fixed.append(row_['fixed'])
            col_commit_fix.append(row_['commit_fix'])
            col_commit_dev.append(row_['commit_dev'])
            col_commit_def.append(row_['commit_def'])
            col_by.append(row_['by'])
            col_labels.append(row_['labels'])
            col_comments.append(row_['comments'])
    final = pd.DataFrame({
            'repository': col_repository,
            'number': col_number,
            'associated': col_associated_prs,
            'package': col_package,
            'ghsa': col_ghsa,
            'fixed': col_fixed,
            'commit_fix': col_commit_fix,
            'commit_dev': col_commit_dev,
            'commit_def': col_commit_def,
            'by': col_by,
            'labels': col_labels,
            'comments': col_comments
            }
        )
    final = final.loc[final.astype(str).drop_duplicates().index]
    final.to_csv(PATH_VULNERABILITY_FIXES['fixes_labels_reduced'], index=False)
